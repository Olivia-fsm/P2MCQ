Text input for mobile or handheld devices is a flourishing research area. [CLS] [SEP] This article begins with a brief history of the emergence and impact of mobile computers and mobile communications devices. [CLS] [SEP] Key factors in conducting sound evaluations of new technologies for mobile text entry are presented, including methodology and experiment design. [CLS] [SEP] Important factors to consider are identified and elaborated, such as focus of attention, text creation versus text copy tasks, novice versus expert performance, quantitative versus qualitative measures, and the speed-accuracy trade-off. [CLS] [SEP] An exciting area within mobile text entry is the combined use of Fitts' law and a language corpus to model, and subsequently optimize, a text entry technique. [CLS] [SEP] The model is described, along with examples for a variety of soft keyboards as well as the telephone keypad. [CLS] [SEP] A survey of mobile text entry techniques, both in research papers and in commercial products, is presented.
Although text entry is by no means new in mobile computing, there has been a burst of research on the topic in recent years. [CLS] [SEP] There are several reasons for this heightened interest: First, mobile computing is on the rise and has spawned new application domains such as wearable computing, two-way paging, and mobile Web and e-mail access. [CLS] [SEP] Second, word processors, spreadsheets, personal schedulers, and other traditional desktop applications are increasingly available on mobile platforms. [CLS] [SEP] Third, there is a strong demand for the input of text or alphanumeric information that is easily and efficiently entered, recognized, stored, forwarded, or searched, via traditional software techniques. [CLS] [SEP] Fourth, the phenomenal success of text messaging with mobile phone users has inspired considerable speculation on future spin-off technologies, all expected to benefit from text entry. [CLS] [SEP] The statistics for text messaging on mobile phones are remarkable. [CLS] [SEP] In January 2001, GSM Europe reported that 15 billion Short Message Service (SMS) text messages are transmitted per month worldwide. [CLS] [SEP] 1 This is particularly interesting in view of the limited capability for text input with the current generation of mobile phone technology. [CLS] [SEP] Although the ubiquitous Qwerty keyboard reigns supreme as the primary text entry device on desktop systems, mobile and handheld systems lack an equivalent dominant technology or technique for the same task. [CLS] [SEP] And so, the challenge of text entry for mobile computing presents itself. [CLS] [SEP] A valid question is, Why not just apply the Qwerty keyboard to the mobile paradigm? [CLS] [SEP] Despite the obvious advantage of familiarity, a Qwerty keyboard is bulky, and unless the keyboard is full size, touch typing is hampered or impossible. [CLS] [SEP] In addition, some mobile devices are intended for one hand use, and this reduces the advantage of the Qwerty arrangement. [CLS] [SEP] (A notable exception is the Half-Qwerty keyboard, discussed later.) [CLS] [SEP] Many mobile devices are committed to the pen input paradigm, so a Qwerty keyboard is simply not an option. [CLS] [SEP] Where physical buttons or keys are employed, the mobile form factor often limits the key complement to a dozen or fewer keys. [CLS] [SEP] This article is organized as follows. [CLS] [SEP] We begin with a brief historical background of mobile and handheld devices. [CLS] [SEP] This is important because it juxtaposes the efforts of researchers with the corporations that created early mobile and handheld devices. [CLS] [SEP] Following this, we offer some opinions and observations on the evaluation of text input techniques. [CLS] [SEP] Many, but not all, of the techniques described later in this article have been empirically evaluated in user tests. [CLS] [SEP] To compare input technologies, the results of these evaluations are crucial. [CLS] [SEP] Factors to consider are presented and elaborated. [CLS] [SEP] Following this, we detail one of the most active areas of current research-optimization of text entry using language and motor control modeling. [CLS] [SEP] Finally, we present a survey of the current state of the art in text entry for mobile computing. [CLS] [SEP] We conclude with some observations on the technologies reviewed and the open research questions that remain. [CLS] [SEP] There are two notable omissions in this article. [CLS] [SEP] One is speech recognition as a vehicle for text entry. [CLS] [SEP] Always "about to emerge," speech is an input technology quick to grab headlines but perennially unable to enter the mainstream of computing. [CLS] [SEP] In our view, speech is a deserving (albeit niche) technology, but it is unlikely to supplant traditional interaction techniques for desktop or mobile computing (see Shneiderman, 2000, for further discussion). [CLS] [SEP] Although some mobile phones support limited speech recognition, the interaction consists of selecting from a small list of preprogrammed entries, such as names in an address book. [CLS] [SEP] Speech recognition is not used for general purpose text input on mobile devices. [CLS] [SEP] The other omission is international languages. [CLS] [SEP] It is clear and obvious that text entry does not imply "English text entry." [CLS] [SEP] Languages throughout the world are currently supported in various forms in mobile computing, and this will continue. [CLS] [SEP] Although the focus in this article is on English, the discussions apply to other languages, particularly those based on the Roman alphabet (see Sacher, 1998, for a discussion on text entry in Asian languages).
Among the earliest of handheld devices was the HP95LX, which was released in 1991 by Hewlett-Packard (Palo Alto, CA; http://www.hp.com). [CLS] [SEP] The technological equivalent of an IBM ® XT shrunk into a clamshell format, the HP95LX was small enough to fit in the palm of one's hand. [CLS] [SEP] Although the term Personal Digital Assistant (PDA) had not yet entered the vernacular to describe a handheld computer, this was the first PDA. [CLS] [SEP] The HP95LX provided a small Qwerty keyboard for text entry, although touch typing was impossible due to its size. [CLS] [SEP] Later devices (the HP100LX and HP200LX) followed. [CLS] [SEP] These devices demonstrated that the Qwerty keyboard could be adapted to mobile computing devices. [CLS] [SEP] The early 1990s was an exciting time for mobile computing due to the arrival of pen computing. [CLS] [SEP] The ideas touted much earlier by Kay and Goldberg (1977) in their Dynabook project finally surfaced in commercial products. [CLS] [SEP] However, the initial devices were bulky, expensive, and power-hungry, and they could not deliver in the one area that garnered the most attention-handwriting recognition. [CLS] [SEP] Without a keyboard, the pen was the primary input device. [CLS] [SEP] If only "selecting" and "annotating" were required, then the success of pen entry seemed assured. [CLS] [SEP] However, some applications demanded entry of text as machine-readable characters, and the handwriting recognition technology of the time was not up to the challenge. [CLS] [SEP] Products from this era, such as GRidPaD, Momenta ™ , Poqet ® , and PenPad, did not sustain the volume of sales necessary for commercial viability. [CLS] [SEP] Most endured only 1 or 2 years. [CLS] [SEP] ports handwriting recognition of keywords, and indexing and retrieval by keyword. [CLS] [SEP] All of the devices previously mentioned are handheld computers that support text entry. [CLS] [SEP] Another quite different group of devices that support text entry are messaging devices such as mobile phones and pagers. [CLS] [SEP] In Europe, where text messaging has been available since 1991, more text messages are transmitted daily than voice messages. [CLS] [SEP] 2 In North America, most mobile phones and pagers do not yet support text messaging, but this is changing. [CLS] [SEP] The latest generation of two-way pagers such as the BlackBerry ™ by Research In Motion (Waterloo, Ontario, Canada; http://rim.net, but also see http://www.blackberry.net) and PageWriter ® by Motorola (Schaumburg, IL; http://www.motorola.com) support text entry via a miniature Qwerty keyboard. [CLS] [SEP] We conclude this perspective with a hint at what the future might hold. [CLS] [SEP] At the top of our list is a device combining the programmability of the PDA, wireless telephony, text messaging, and unfettered Internet and e-mail access. [CLS] [SEP] Pieces of this scenario already exist, but implementations require a specialized configuration, optional components, or support only a subset of standard features. [CLS] [SEP] We view these as transitional technologies. [CLS] [SEP] Devices that do not quite make the grade, in our view, are those that require an add-on radio transceiver or provide Internet access only to sites supporting a specialized protocol (e.g., wireless access protocol). [CLS] [SEP] For text input, the pen-based paradigm has dominated the PDA market, but there is a parallel trend toward text messaging in mobile phones and pagers using keyboard-based technology. [CLS] [SEP] If these technologies converge, then which text input technology will prevail? [CLS] [SEP] This is a difficult question to answer, and although there is no definitive answer, the following section identifies the key issues to consider.
There are two competing paradigms for mobile text input: pen-based input and keyboard-based input. [CLS] [SEP] Both emerged from ancient technologies ("ancient" in that they predate computers): typing and handwriting. [CLS] [SEP] User experience with typing and handwriting greatly influences expectations for text entry in mobile computing; however, the two tasks are fundamentally different. [CLS] [SEP] A key feature of keyboard-based text entry is that it directly produces machine-readable text (i.e., ASCII characters), a necessary feature for indexing, searching, and handling by contemporary character-based technology. [CLS] [SEP] Handwriting without character recognition produces "digital ink." [CLS] [SEP] This is fine for some applications such as annotation, visual art, and graphic design. [CLS] [SEP] However, digital ink requires more memory and in general it is not well managed by computing technology. [CLS] [SEP] Specifically, digital ink is difficult to index and search (although Poon, Weber, & Cass, 1995, reported some success with a graphical search mechanism for digital ink that is not based on recognition). [CLS] [SEP] For handwritten text entry to achieve wide appeal, it must be coupled with recognition technology. [CLS] [SEP] An important consideration implicit in the discussion of text input technology is user satisfaction. [CLS] [SEP] The point was made earlier that the Palm succeeded where the Newton failed, in part because of users' acceptance of Graffiti as a text input technology. [CLS] [SEP] Users' expectations for text entry are set by current practice. [CLS] [SEP] Modest touch typing speeds in the range of 20 to 40 words per minute (wpm) are achievable for hunt-and-peck typists. [CLS] [SEP] Rates in the 40 to 60 wpm range are achievable for touch typists, and with practice, skilled touch typists can achieve rates greater than 60 wpm. [CLS] [SEP] Handwriting speeds are commonly in the 15 to 25 wpm range. [CLS] [SEP] These statistics are confirmed by several sources (Card, Moran, & Newell, 1983;Devoe, 1967;Lewis, 1999;Van Cott & Kinkade, 1972). [CLS] [SEP] Users, perhaps unrealistically, expect to achieve text input rates within these ranges on mobile devices. [CLS] [SEP] Furthermore, they expect these rates immediately, or within a short time of using a new input technology. [CLS] [SEP] The preceding paragraphs have outlined qualities of a successful text input method. [CLS] [SEP] Production of machine-readable characters at a speed acceptable to users is a reasonable objective. [CLS] [SEP] To determine if a particular text input method meets this objective, or to compare new and existing text input methods, a user evaluation is needed.
Research in mobile text entry is flourishing in part because user needs are not currently met. [CLS] [SEP] Typically, traditional text input technologies are refined or new input technologies are invented. [CLS] [SEP] Either way, evaluation is a critical and demanding part of the research program. [CLS] [SEP] The questions researchers pose are ambitious: Can entry rates be improved if we arrange the buttons on a keyboard in a certain way? [CLS] [SEP] What is the effect if we use context to guess the next letter or word? [CLS] [SEP] Can we apply an altogether different technology, like pie menus, touch pads, or pattern recognition, to the problem of text input? [CLS] [SEP] In this section, we discuss important issues in undertaking valid and useful evaluations of text entry techniques.
An evaluation is valuable and useful if the methodology is reproducible and results are generalizable. [CLS] [SEP] Reproducible implies that other researchers can duplicate the method to confirm or refute results. [CLS] [SEP] This is achieved for the most part simply by following an appropriate reporting style (e.g., American Psychological Association, 1995). [CLS] [SEP] Generalizable implies that results have implications beyond the narrow context of the controlled experiment. [CLS] [SEP] This is achieved through a well-designed experiment that gathers measures that are accurate and relevant, in tasks that are representative of real-life behavior. [CLS] [SEP] There is, unfortunately, a trade-off here. [CLS] [SEP] In real life, people rarely focus solely on a single task. [CLS] [SEP] Methodologies so designed, therefore, may find that the measurements include behaviors not specifically required of the interaction technique. [CLS] [SEP] The trade-off, therefore, is between the accuracy of our answers and the importance or relevance of the questions they seek to address. [CLS] [SEP] That is, we can choose between providing accurate answers to narrow questions, or providing vague answers to broad questions. [CLS] [SEP] The reader is implored not to interpret this too strictly, but, we hope, the point is made. [CLS] [SEP] In designing an experiment, we strive for the best of both worlds; answering interesting or broad questions (viz., using real-life tasks) and doing so accurately (viz., accurately measuring the behavior of interest, such as entry speed or accuracy). [CLS] [SEP] In the following sections, we identify some factors relevant to methodologies for evaluating text entry on mobile systems.
An important distinction in text entry evaluations is between text creation and text copy. [CLS] [SEP] In a text copy task, the participant is given text to enter using the input technique under investigation. [CLS] [SEP] In a creation task, the source text is either memorized or generated by the participant. [CLS] [SEP] Although text creation is closer to typical usage, the approach is generally not appropriate for an empirical evaluation. [CLS] [SEP] This is explained in the following paragraphs. [CLS] [SEP] As a backdrop for discussing these two types of tasks, we introduce the term focus of attention (FOA). [CLS] [SEP] FOA speaks to the attention demands of the task. [CLS] [SEP] Consider the case of an expert touch typist using a Qwerty keyboard to copy text from a nearby sheet of paper. [CLS] [SEP] This is a text copy task. [CLS] [SEP] Because the typist is an expert, she does look at the keyboard or display-she attends only to the source text. [CLS] [SEP] This is a single FOA task. [CLS] [SEP] However, if input is via a stylus and soft keyboard, the typist must also attend to the keyboard. [CLS] [SEP] (A soft keyboard cannot be operated "eyes free.") [CLS] [SEP] Stylus typing, therefore, is a two-FOA task. [CLS] [SEP] If the typist is at a less-than-expert level and corrects errors, she must look at the display to monitor results. [CLS] [SEP] This increases touch typing to a two-FOA task and stylus typing to a three-FOA task. [CLS] [SEP] Clearly, the feedback channel is overburdened in a three-FOA task. [CLS] [SEP] Despite the additional FOA, text copy tasks are generally preferred to text creation tasks for empirical evaluations. [CLS] [SEP] There are several reasons. [CLS] [SEP] One is the possible presence of behaviors not required of the interaction technique. [CLS] [SEP] Examples include pondering ("What should I enter next?") [CLS] [SEP] or secondary tasks (e.g., fiddling with system features). [CLS] [SEP] Clearly, measurement of text entry speed is compromised if such behaviors are present. [CLS] [SEP] A second difficulty with text creation tasks is identifying errors-it is difficult to know exactly what a participant intended to enter if the participant is generating the text. [CLS] [SEP] Even if the message content is known a priori, errors in spelling or memory recall may occur, and these meta-level mistakes are often indistinguishable from errors due to the interface itself. [CLS] [SEP] A third difficulty is the loss of control over the distribution of letters and words entered. [CLS] [SEP] The task should require the participant to enter a representative number of occurrences of characters or words in the language (i.e., results are generalizable). [CLS] [SEP] However, it is not possible to control for this if the participant is generating the text. [CLS] [SEP] The main advantage of a text creation task is that it mimics typical usage. [CLS] [SEP] The disadvantages just cited, however, are significant and drive most researchers to use text copy tasks despite the increased FOA. [CLS] [SEP] One way to mitigate the effects of increased FOA is to dictate the source text through the audio channel. [CLS] [SEP] Ward, Blackwell, and MacKay (2000) used this technique; however, they noted that participants found the approach stressful and hard to follow. [CLS] [SEP] A carefully designed experiment may capture the strengths of both a text creation task and a text copy task. [CLS] [SEP] One technique is to present participants with short, easy-to-memorize phrases of text. [CLS] [SEP] Participants are directed to read and memorize each phrase before entering it. [CLS] [SEP] Entry proceeding thus benefits from the desirable property of a text creation task (viz., reduced FOA). [CLS] [SEP] In addition, the desirable properties of a text copy task are captured (i.e., control over letter and word frequencies and performance measurements that exclude thinking about what to write). [CLS] [SEP] There are numerous examples of this approach in the literature (e.g., Alsio & Goldstein, 2000;Rau & Skiena, 1994). [CLS] [SEP] A similar technique is to present text in large a block (e.g., a complete paragraph) but to interleave each line of the presented text (input) with each line of generated text (output). [CLS] [SEP] As input proceeds, each character entered appears directly below the intended character. [CLS] [SEP] This is a text copy task; however, FOA is reduced to that of a text creation task because participants attend only to one lo-cation for both the source text and the results of entry. [CLS] [SEP] An example of this methodology is reported by Matias, MacKenzie, and Buxton (1993) and Matias, MacKenzie, and Buxton (1996a).
Most work on the design of text input methods focuses on the potential, or expert, text entry rate of a particular design. [CLS] [SEP] However, the novice experience is paramount for the success of new text input methods. [CLS] [SEP] This is at least partially due to the target market. [CLS] [SEP] Mobile devices, such as mobile phones and PDAs, once specialized tools for professionals, are increasingly targeted for the consumer market. [CLS] [SEP] It follows that "immediate usability" is important. [CLS] [SEP] In other words, it may be a moot point to establish the expert, or "potential" text entry rate for an input technique if prolonged practice is required to achieve it. [CLS] [SEP] Consumers, discouraged by their initial experience and frustration, may never invest the required effort to become experts. [CLS] [SEP] However, measuring immediate usability is easier said than done. [CLS] [SEP] In typical studies of new interaction techniques, participants are given a demonstration of the technique followed by a brief practice session. [CLS] [SEP] Then, data collection proceeds over several blocks of trials. [CLS] [SEP] However, the measurements are a poor indicator of novice behavior, at least in the sense of immediate, or walk-up, usability. [CLS] [SEP] Within a few minutes, participants' knowledge of the interaction technique develops, and the novice status fades. [CLS] [SEP] Measuring expert performance is also not easy because acquisition of expertise requires many blocks of trials administered over many days, or more. [CLS] [SEP] Some longitudinal text entry studies are hereby cited (Bellman & MacKenzie, 1998;Gopher & Raij, 1988;Matias et al., 1996a;McMulkin, 1992). [CLS] [SEP] An example of results from a typical longitudinal study is given in Figure 1. [CLS] [SEP] Users' improvement in entry speed is shown over 20 sessions of input for two types of soft keyboard. [CLS] [SEP] The data were fitted to the standard power law of learning (see Card, English, & Burr, 1978). [CLS] [SEP] Prediction equations and squared correlations are shown, as are extrapolations of the predictions to 50 sessions.
We noted earlier a trade-off between the accuracy of answers and the relevance of the questions they seek to address. [CLS] [SEP] Quantitative evaluations tend to provide accurate answers to narrow questions, whereas qualitative evaluations tend to provide rather loose answers ("participants liked the device!") [CLS] [SEP] to broad but very important issues (comfort, ease of use, subjective impression, etc.). [CLS] [SEP] Of course, researchers strive for the best of both worlds. [CLS] [SEP] In quantitative evalua-tions, "representative tasks" and "relevant measures" are used to ensure interesting or relevant questions are answered. [CLS] [SEP] In qualitative evaluations, robust test instruments are developed to ensure the answers are accurate, relevant, reproducible, and generalizable. [CLS] [SEP] When reporting quantitative results, there are many common pitfalls to avoid such as inaccuracy in measurements, lack of control or baseline conditions, inferring too much from data, using too small a sample size, collecting insufficient data, artificially biasing data by aggregation, nonrandom presentation of conditions, and inappropriate treatment of outliers. [CLS] [SEP] The reader is directed to textbooks in experimental psychology for further discussions (e.g., Martin, 1996; for a discussion on aggregation bias, see Walker et al., 1993). [CLS] [SEP] Researchers may be excused for slightly bending the rules, perhaps, but all too common are published reports stating only qualitative results steeped in anecdote, or, worse yet, testimonials unsupported by empirical data. [CLS] [SEP] An excerpt from one such publication illustrates our point: While we have yet not done systematic user testing, anecdotal experience to date is consistent: Users well practiced in both … and … consistently find the latter to be about three times faster, with accuracy for both systems very high. [CLS] [SEP] 3 Testimonials such as this are of questionable merit; they surely do not meet the criteria for good research-that results are generalizable and reproducible. [CLS] [SEP] Unless a controlled experiment is performed using quantitative metrics or established qualitative test instruments, there is no way to gauge the performance of a new text input technique. [CLS] [SEP] Conjuring up a new input technique is fine, but research demands more. [CLS] [SEP] It demands that new ideas are implemented and evaluated in conformance with the rigors of an empirical evaluation. [CLS] [SEP] Although quantitative tests form the backbone of any scientific study, qualitative aspects of the investigation are also important. [CLS] [SEP] In human-computer interfaces, users must feel comfortable with the interaction technique and must feel their efforts have a reasonable payoff in their ability to accomplish tasks. [CLS] [SEP] Participants will develop impressions of each device or condition tested, and these should be solicited and accounted for in the final analysis. [CLS] [SEP] Typically, these opinions are sought via questionnaire, administered at the end of a condition or experiment. [CLS] [SEP] The reader is referred to textbooks in human-computer interaction for direction in questionnaire design (e.g., Dix, Finlay, Abowd, & Beale, 1998).
For text input there are two primary evaluation metrics: speed and accuracy. [CLS] [SEP] The simplest way to measure and report speed is to measure the number of characters entered per second during a trial, perhaps averaged over blocks of trials. [CLS] [SEP] This gives a measure in characters per second (cps). [CLS] [SEP] To convert this to wpm, the standard typists' definition of a word as five characters (regardless of whether the characters are letters, punctuation, or spaces) is employed (Gentner, Grudin, Larochelle, Norman, & Rumelhart, 1983). [CLS] [SEP] Therefore, wpm is obtained by multiplying characters per second by 60 (seconds per minute) and dividing by 5 (characters per word).
Accuracy is more problematic. [CLS] [SEP] For a simple treatment of accuracy, we obtain a metric that captures the number of characters in error during a trial and report these as a percentage of all characters in the presented text. [CLS] [SEP] A more complete analysis involves determining what kind of errors occurred, and why. [CLS] [SEP] The difficulty arises from the compounding nature of mistakes (see Suhm, Myers, & Waibel, 1999), and the desire to automate as much of the data measurement and analysis as possible. [CLS] [SEP] Four basic types of errors include entering an incorrect character (substitution), omitting a character (omission), adding an extra character (insertion), or swapping neighboring characters (transposition). [CLS] [SEP] Although it is straightforward for a human to compare the intended text with the generated text and tabulate the errors, in practice the amount of analysis is simply too much, given a reasonable number of partici-pants, conditions, and trials. [CLS] [SEP] Additionally, tabulation errors may be introduced if performed manually. [CLS] [SEP] However, automating error tabulation is not trivial. [CLS] [SEP] Consider an experiment where the participant is required to enter the 19-character phrase "the quick brown fox." [CLS] [SEP] If the participant enters "the quxxi brown fox," the incorrect word contains either three substitution errors or two insertion ("xx") and two omission ("ck") errors. [CLS] [SEP] The explanation with the fewest number of errors ( 3) is preferred and, in this simple example, yields an error rate of (3 / 19) × 100% = 15.8%. [CLS] [SEP] Algorithms for "string distance" calculations, such as the Levenshtein string distance statistic (Damerau, 1964;Levenshtein, 1966), might assist in automating analyses such as these, as demonstrated by Soukoreff and MacKenzie (2001). [CLS] [SEP] Difficulties in error tabulation have pushed some researchers to ignore errors altogether (e.g., Venolia & Neiberg, 1994) or to force the participant to enter correct text only (e.g., Lewis, 1999). [CLS] [SEP] Directing participants to "correct as you go" is another possible approach. [CLS] [SEP] Assuming participants adhere to instructions, the resulting text is error free; thus, the error rate is 0%. [CLS] [SEP] In general though, participants will leave errors in the generated text, even if requested not to. [CLS] [SEP] The result is two levels of errors-those that were corrected and those that were not. [CLS] [SEP] For the corrected errors, overhead is incurred in making the corrections. [CLS] [SEP] A reasonable measure of accuracy in this case is keystrokes per character (KSPC). [CLS] [SEP] For a Qwerty keyboard, the ideal is KSPC = 1.0, but, in practice, KSPC > 1 if participants correct as they go. [CLS] [SEP] If, for example, a 25-character phrase were entered and two substitution errors occurred, each corrected by pressing Backspace followed by the correct character, then KSPC = (25 + 4) / 25 = 1.16. [CLS] [SEP] 4 A useful tool for designers is the confusion matrix, graphically depicting the frequency of character-level transcription errors. [CLS] [SEP] Figure 2 is a confusion matrix taken from MacKenzie and Chang's (1999) comparative study of two handwriting recognizers. [CLS] [SEP] The confusion matrix displays intended characters versus recognized characters illustrating how often an intended character (left-hand column) was misrecognized and interpreted as another character (bottom row). [CLS] [SEP] Each dot represents three occurrences. [CLS] [SEP] Clearly, both speed and accuracy must be measured and analyzed. [CLS] [SEP] Speed and accuracy are commonly known to exist in a continuum, wherein speed is traded for accuracy and vice versa (Hancock & Newell, 1985;Pachella & Pew, 1968;Pew, 1969;Swensson, 1972;Wickelgren, 1977). [CLS] [SEP] Participants can enter text more quickly if they are willing to sacrifice accuracy. [CLS] [SEP] For participants to perform with high accuracy, they must slow down. [CLS] [SEP] The trade-off suggests that measuring only speed or only accuracy will skew the results so as to make the text input method appear better (or worse!) [CLS] [SEP] than it really is. [CLS] [SEP] An example of a reporting technique that combines speed and accuracy is given in Figure 3. [CLS] [SEP] Conditions are "better" toward the top and right of the figure because they are both fast and accurate.
The text input process can be significantly impacted by factors bearing little on the input device, such as whether the device is operated standing, sitting, or walking, or whether it is operated with one or two hands. [CLS] [SEP] Designers of novel text input techniques must be aware that users want to operate mobile devices anytime, anywhere. [CLS] [SEP] Lack of a one-hand interaction method may impact the commercial success of a technology. [CLS] [SEP] Evaluations are often conducted to test a refinement to existing practice. [CLS] [SEP] Often the new technique is an improvement over the status quo. [CLS] [SEP] In the next section, we present some key initiatives in improving current practice through language and movement modeling.
There are two popular approaches to optimizing the text entry task: movement minimization and language prediction. [CLS] [SEP] Movement minimization seeks to reduce the movements of the finger or pen in interacting with a mobile device to enter text. [CLS] [SEP] Language prediction exploits the statistical nature of a language to predict the user's intended letters or words. [CLS] [SEP] There are also hybrid approaches. [CLS] [SEP] In the following sections we summarize these modeling and design techniques.
The main reason for using a Qwerty keyboard for text input is to support touch typing. [CLS] [SEP] The next-best reason is familiarity with the letter arrangement. [CLS] [SEP] However, the sheer size of a Qwerty keyboard is imposing and ill-suited to the mobile paradigm. [CLS] [SEP] Recent work has focused on the limited case of single-finger or stylus entry, either on a soft keyboard or on a small physical keyboard with a reduced key set. [CLS] [SEP] This work combines a statistical language model with a movement time prediction model to assist in modeling and designing input techniques wherein device or hand movement is as efficient as possible Lewis, Allard, & Hudson, 1999a;Lewis, LaLomia, & Kennedy, 1999a, 1999bMacKenzie, Zhang, & Soukoreff, 1999;Zhang, 1998). [CLS] [SEP] The following is the summary of a model introduced by Soukoreff and MacKenzie (1995). [CLS] [SEP] The model comprises five major components: pairs, or digrams, in common English; and (e) a spreadsheet or software tool in which the preceding components are combined. [CLS] [SEP] For (a), each key is assigned an x-y coordinate, thus allowing digram distances to be easily computed using the Pythagorean identity. [CLS] [SEP] For (b), we use Fitts' law (Fitts, 1954;MacKenzie, 1992) to predict the movement time (MT; in seconds) to tap any key given any previous key. [CLS] [SEP] This is a simple prediction based on the distance between the keys (A ij ) and the size, or width, of the target key (W j ): For (c), we use the Hick-Hyman law (Hick, 1952;Hyman, 1953) to predict the reaction time (RT; in seconds) to visually scan a 27-key layout to find the target key. [CLS] [SEP] For novices, we set For experts, we set RT = 0 sec. [CLS] [SEP] For (d), we use a 27 × 27 matrix of digram frequencies to establish probabilities for each digram in common English, P ij . [CLS] [SEP] The table includes the 26 letters plus the Space character. [CLS] [SEP] These are used to weight the movement time predictions in obtaining the mean movement time over all possible digrams: RT is set to either .951 seconds (novices) or 0 seconds (experts), as noted earlier. [CLS] [SEP] 5 Entry speed in wpm is calculated by taking the reciprocal of the mean movement time, multiplying by 60 seconds per minute, and dividing by 5 characters per word: ( ) RT = = ( ) Σ Σ =´+ (3) ij ij i j MT P M RT 5.2 A recent experiment has revealed several weaknesses in the novice component of the model (MacKenzie & Zhang, 2000). [CLS] [SEP] Work is underway to refine the motor component of novice model to generate more accurate predictions. [CLS] [SEP] 1 60 _ ( 4 ) 5 Entry Speed MT ae ö ÷ ç =÷ ç ÷ ç è ø 2 0.204 log 1 (1) ij ij j A MT W ae ö ÷ ç ÷ = + ç ÷ ç ÷ ÷ ç è ø The model takes particular care to accommodate the Space bar because it is the most prevalent character in text entry tasks. [CLS] [SEP] The result is a general behavioral description and predictive model of the task of text entry with a stylus and soft keyboard. [CLS] [SEP] We consider the predictions approximate but useful (for more details, see Soukoreff & MacKenzie, 1995). [CLS] [SEP] This model has been subsequently used by others seeking an optimal keyboard layout for stylus typing (Hunter et al., 2000;Zhai et al., 2000;Zhang, 1998). [CLS] [SEP] Their efforts are reported later in this article.
Predictive text input techniques strive to reduce the input burden by predicting what the user is entering. [CLS] [SEP] This is accomplished by analyzing a large collection of documents-a corpus-to establish the relative frequency of characters, digrams (pairs of characters), trigrams, words, or phrases in the language of interest. [CLS] [SEP] These statistical properties are used to suggest or predict letters or words as text is entered. [CLS] [SEP] The seminal publication in the area of text prediction is by Shannon (1951), and although there are many ways to implement text prediction, most are based on this article. [CLS] [SEP] Predictive input technologies have the capacity to significantly reduce the effort required to enter text-if the prediction is good. [CLS] [SEP] However, there are a few caveats to consider in basing a language model on a standard corpus, including (a) the corpus may not be representative of the user language, (b) the corpus does not reflect the editing process, and (c) the corpus does not reflect input modalities. [CLS] [SEP] An explanation of these points follows.
The idea that a corpus is "representative of a language" is questionable when the domain is users interacting with computing technology. [CLS] [SEP] Users typically use a much richer set of characters and words than appear in any corpus, and the statistical properties in the user's set may differ from those in the corpus. [CLS] [SEP] A simple example is the Space key, which is the most common character in English text (Soukoreff & MacKenzie, 1995). [CLS] [SEP] However, the Space character is typically missing in tables of letter or digram probabilities used to build language models (e.g., Maynzer & Tresselt, 1965;Underwood & Schulz, 1960). [CLS] [SEP] In addition, punctuation symbols are rarely included in letter or digram tables. [CLS] [SEP] Both Isokoski (1999) and Zhai et al. [CLS] [SEP] (2000) observed that some punctuation symbols occur more frequently than some of the less frequent letters. [CLS] [SEP] Inclusion of the Space character and simple punctuation symbols is the first step. [CLS] [SEP] We feel it is important to fully open the character set. [CLS] [SEP] (Corpora often do not distinguish between capital and lowercase letters, but this is the special case of input modalities, discussed next.) [CLS] [SEP] The characteristics of the text users enter are dependent on the application used to create the text. [CLS] [SEP] For example, we expect more formal prose using a word processor than an e-mail application. [CLS] [SEP] In addition, the type of application depends on the input device available-few people have the patience to enter volumes of text into a handheld PDA device. [CLS] [SEP] The kinds of text most likely entered in this context are short notes, phone numbers, URLs, acronyms, slang, and so forth, the statistical properties of which differ from formal English texts. [CLS] [SEP] Highly cryptic messages are common for text entry on cell phones (Grinter & Eldridge, in press).
A corpus contains no information about the editing process, and we feel this is an unfortunate omission. [CLS] [SEP] Users are fallible, and the creation of a text message-or interaction with a system on a larger scale-involves much more than the perfect linear input of alphanumeric symbols. [CLS] [SEP] The input process is really the editing process. [CLS] [SEP] Recently, we conducted a study to monitor and analyze keystroke-level interaction with desktop systems. [CLS] [SEP] Over a period of 2 months we logged all keystrokes (>400,000) for four desktop computer users. [CLS] [SEP] Figure 4 shows the 15 most common keystrokes. [CLS] [SEP] Common editing keys, such as Down, Back, and Up, figure very prominently in the table. [CLS] [SEP] Although mobile users engage a much different interface, the data in Figure 4 serve as a warning flag that input with computing technology, in general, is much richer than represented in a corpus.
Text documents do not reflect how they were created. [CLS] [SEP] For example, a corpus includes both capital and lowercase characters. [CLS] [SEP] In simple language models this distinction is ignored (e.g., A and a are considered the same). [CLS] [SEP] A more expansive model can easily accommodate this distinction simply by treating capital and lowercase characters as distinct symbols. [CLS] [SEP] However, from the input perspective, both approaches are wrong. [CLS] [SEP] Uppercase and lowercase characters are never entered via separate keys on a keyboard; thus, the seemingly more accurate treatment of uppercase and lowercase characters as distinct symbols is just as wrong. [CLS] [SEP] For the user's interaction with the Shift and Caps Lock keys to be accommodated in a model of text input, activity with these and related keys should be included in the language model. [CLS] [SEP] In other words, it is the "language of inter-action" that should be modeled. [CLS] [SEP] Note in Figure 4 that the Shift key fares no worse than 11th in the list of most-frequent keys.
Some text input techniques include both movement-minimizing and predictive features. [CLS] [SEP] Dasher (Ward et al., 2000) is a predictive text input technique using a pointing device to select from anticipated options (see also Ward, Blackwell, & MacKay, 2002). [CLS] [SEP] The options are presented to the user in boxes sized according to their relative probabilities. [CLS] [SEP] The boxes scroll and expand as the pointing device hovers near them (using graphics somewhat like a video game), allowing fast text entry. [CLS] [SEP] Thus, the technique is both movement minimizing and predictive. [CLS] [SEP] An online demonstration is available (http://wol.ra.phy.cam.ac.uk/mackay/dasher).
Because space is limited on small devices, keyboards that minimize the number of keys are of interest. [CLS] [SEP] However, users desire a large set of characters including the alphabet, numbers, symbols, and editing keys. [CLS] [SEP] An example of this is the standard PC-compatible 101-key keyboard. [CLS] [SEP] Although the standard PC keyboard has 101 keys, a user can produce closer to 800 individual keystrokes (each key is pressed in combination with Shift, Ctrl, or Alt, and the TEXT ENTRY FOR MOBILE COMPUTING 165 Num Lock key changes the mode of the numeric keypad). [CLS] [SEP] The keys on the standard PC keyboard are, therefore, ambiguous; disambiguation is accomplished with the various mode keys. [CLS] [SEP] There is another way to disambiguate keystrokes. [CLS] [SEP] Some keyboards are designed with more than one letter on each key (e.g., the alphabetic characters on a standard telephone keypad). [CLS] [SEP] Text entered on these is inherently ambiguous because different character strings correspond to the same key presses. [CLS] [SEP] For example, on a standard telephone keypad, both gap and has correspond to the key sequence 4-2-7. [CLS] [SEP] Disambiguation technology takes key press sequences and uses an embedded database of language statistics to identify legal words. [CLS] [SEP] These are presented to the user for verification. [CLS] [SEP] Automated disambiguation holds promise to increase the speed and accuracy of text input on ambiguous keyboards. [CLS] [SEP] Conceptually, we can think of key ambiguity as a continuum (see Figure 5). [CLS] [SEP] At one extreme, we have a keyboard with a dedicated key for each symbol in the language (Figure 5a), whereas at the other extreme we have just one key that maps to every symbol in the language (Figure 5d). [CLS] [SEP] The keyboard in Figure 5d would be very fast 6 because only one key is pressed. [CLS] [SEP] However, it is of no practical use because each key press is ambiguous to the entire set of symbols in the language. [CLS] [SEP] Clearly, Figure 5d is little more than a curiosity. [CLS] [SEP] The Qwerty keyboard (Figure 5b) and telephone keypad (Figure 5c) represent two relevant points in the continuum. [CLS] [SEP] The previous sections introduced many issues facing researchers in mobile text input, and we have delineated the design space within which this research takes place. [CLS] [SEP] In the following section we present a survey of mobile text entry techniques as found in research papers and commercial products.
The survey is divided into key-based and stylus-based text input methods.
Key-based text entry techniques range from those that use a keyboard where each key represents one or more letters to those with as few as three keys.
The desire for an effective text entry method using the telephone keypad is fueled by the increase in text-messaging services and the movement toward consolidation of technologies such as wireless telephony and handheld computers. [CLS] [SEP] Text entry on a mobile phone is based on the standard 12-key telephone keypad (see Figure 6). [CLS] [SEP] The 12-key keypad consists of number keys 0 to 9 and two additional keys (* and #). [CLS] [SEP] Characters A to Z are spread over keys 2 to 9 in alphabetic order. [CLS] [SEP] The placement of characters is similar in most mobile phones, as it is based on an international standard (Grover, King, & Kuschler, 1998). [CLS] [SEP] The placement of the Space character varies among phones; however, it is usually entered with a single press of the 0 key or the # key. [CLS] [SEP] Because there are fewer keys than the 26 needed for the characters A to Z, three or four characters are grouped on each key, and so, ambiguity arises, as noted earlier. [CLS] [SEP] In the following paragraphs, we present three approaches to text entry on a phone keypad: multitap, two-key, and one-key with disambiguation.
The multitap method is currently the most common text input method for mobile phones. [CLS] [SEP] With this approach, the user presses each key one or more times to specify the input character. [CLS] [SEP] For example, the 2 key is pressed once for the character A, twice for B, and three times for C. Multitap suffers from the problem of segmentation, when a character is on the same key as the previous character (e.g., the word on because both O and N are on the 6 key). [CLS] [SEP] To enter the word on, the user presses the 6 key three times, waits for the system to timeout, and then presses the 6 key twice more to enter the N. Another segmentation technique is to use a special key to skip the timeout ("timeout kill"), thus allowing direct entry of the next character on the same key. [CLS] [SEP] Some phone models use a combination of the two solutions. [CLS] [SEP] For example, Nokia phones (Nokia Group, Finland; http://www.nokia.com) include both a 1.5-sec timeout and the provision for a timeout kill using the Down Arrow key. [CLS] [SEP] The user decides which strategy to use. [CLS] [SEP] In the two-key method, the user presses two keys successively to specify a character. [CLS] [SEP] The first key selects the group of characters (e.g., the 5 key for J, K, or L). [CLS] [SEP] The second key specifies the position within the group. [CLS] [SEP] For example, to enter the character K the user presses 5 followed by 2 (K is second character in JKL). [CLS] [SEP] Although the two-key method is quite simple, it is not in common use for entering Roman letters. [CLS] [SEP] However, in Japan a similar method (often called the "pager" input method) is very common for entering Katakana characters. [CLS] [SEP] A third way to overcome the problem of ambiguity is to add linguistic knowledge to the system. [CLS] [SEP] We call this technique one-key with disambiguation. [CLS] [SEP] An example is T9 ® by Tegic Communications, Inc. [CLS] [SEP] (Seattle, WA; http://www.tegic.com). [CLS] [SEP] When using T9 each key is pressed only once. [CLS] [SEP] For example, to enter the, the user enters 8-4-3-0. [CLS] [SEP] The 0 key for "space" delimits words and terminates disambiguation of the preceding keys. [CLS] [SEP] T9 compares the word possibilities to a linguistic database to guess the intended word. [CLS] [SEP] Naturally, linguistic disambiguation is not perfect because multiple words may have the same key sequence. [CLS] [SEP] In these cases the most common word is the default. [CLS] [SEP] A simple example follows using the well-known "quick brown fox" phrase: (words are shown top to bottom, most probable at the top) 843 78425 27696 369 58677 6837 843 5299 364 the quick brown fox jumps over the jazz dog tie stick crown lumps muds tie lazy fog vie vie Of the nine words in the phrase, eight are ambiguous, given the required key sequence. [CLS] [SEP] For seven of the eight, however, the intended word is the most probable word. [CLS] [SEP] The intended word is not the most probable word just once, with jazz being more probable in English than lazy. [CLS] [SEP] In this case, the user must press additional keys to obtain the desired word. [CLS] [SEP] Evidently, the term one-key in "one-key with disambiguation" is an oversimplification ! [CLS] [SEP] Silfverberg, MacKenzie, and Korhonen (2000) presented predictive models of these three text input methods based on the model of Soukoreff and MacKenzie (1995). [CLS] [SEP] They reported that the disambiguation of T9 works reasonably well, with expert predictions ranging from 41 to 46 wpm. [CLS] [SEP] However, these figures are coincident with rather broad assumptions. [CLS] [SEP] These include (a) all words entered are unambiguous, (b) users are experts (i.e., no typing, spelling, or other errors), and (c) all words entered are in the dictionary. [CLS] [SEP] Their predictions are, at best, an upper bound. [CLS] [SEP] Many mobile phone manufacturers have licensed the T9 input technology, and since 1999 it has surfaced in commercial products (e.g., the Mitsubishi MA125, the Motorola i1000Plus, and the Nokia 7110). [CLS] [SEP] There is also a touch screen version of T9 that is available for PDAs. [CLS] [SEP] Bohan, Phipps, Chaparro, and Halcomb (1999) described an evaluation of the touch screen version. [CLS] [SEP] T9 was the first disambiguating technology to work with a standard mobile phone keypad, but not the only such technology. [CLS] [SEP] Motorola's iTAP ® is disambiguating technology similar to T9. [CLS] [SEP] Both iTAP and T9 support multiple languages. [CLS] [SEP] The Chinese version of iTAP uses a nine-key input method for writing the various strokes; it offers users more keystroke choices and is easy to learn (Sacher, 1998). [CLS] [SEP] Another similar technology is eZiText ® by Zi Corporation (Calgary, Alberta, Canada; http://www.zicorp.com). [CLS] [SEP] No published evaluations exist of iTAP or of eZiText. [CLS] [SEP] A slightly different approach is presented in WordWise by Eatoni Ergonomics (New York; http://www.eatoni.com). [CLS] [SEP] To aid in disambiguation, a mode shift is used to explicitly choose one character from each key and the other characters remain ambiguous; this achieves partial disambiguation. [CLS] [SEP] Figure 7 illustrates the WordWise keypad. [CLS] [SEP] The mode shift is implemented either with the 1 key (shown in Figure 7) or using a thumb-activated key on the side of the mobile phone. [CLS] [SEP] To enter the letter C, the Shift key is pressed followed by the 2 key. [CLS] [SEP] To enter the letter A, the 2 key is pressed by itself, and automatic disambiguation determines whether the user intended to enter A or B. The letters chosen for the mode shift are C, E, H, L, N, S, T, and Y, most of which are the most popular letters in each group (on each key). [CLS] [SEP] These letters were chosen to provide maximum separation for the disambiguation algorithm. [CLS] [SEP] One beneficial side effect of the mode shift is that words that are explicit (e.g., the, which is entered by holding Shift while entering 8-4-3) can be omitted in the internal database. [CLS] [SEP] This greatly reduces the memory requirements of the implementation-a critical factor for mobile phones. [CLS] [SEP] Text input on the telephone keypad, working in concert with language-based disambiguation (e.g., T9 or WordWise), requires the attention of the user to monitor the outcome of keystrokes. [CLS] [SEP] A typical text creation task has two FOA because the user attends to both the keypad and the display. [CLS] [SEP] The performance impact of this behavior is difficult to model because it depends on cognitive and perceptual processes, and on user strategies (see Silfverberg et al., 2000, for further discussion). [CLS] [SEP] With the multitap or two-key techniques, the outcome of keystrokes bears no such uncertainty; thus, skill in performing eyes-free input is more easily attained. [CLS] [SEP] The models created by Silfverberg et al. [CLS] [SEP] (2000) predict about 21 to 27 wpm for the multitap method and the two-key method.
The most prevalent text input technology for low-end PDAs is the miniature Qwerty keyboard. [CLS] [SEP] There are many examples, such as the HP2000, some models of the HP Jornada, the Sharp (Osaka, Japan; http://sharp-world.com) Zaurus, the Sharp Mobilon, and the Psion (London; http://psion.com) Revo. [CLS] [SEP] Two-way pagers support text input and at least two companies have pager products with miniature Qwerty keyboards. [CLS] [SEP] The BlackBerry by Research In Motion is a two-way pager with a small Qwerty keyboard (see Figure 8a). [CLS] [SEP] The keyboard is too small for touch typing, but it is suitable for one-or two-finger typing. [CLS] [SEP] Motorola has a similar product called the PageWriter (see Figure 8b). [CLS] [SEP] The Nokia Communicator is a mobile phone with text-messaging functionality. [CLS] [SEP] It looks like a typical mobile phone when operated as a phone, but it opens to reveal a large LCD screen and miniature Qwerty keyboard inside (see Figure 9). [CLS] [SEP] The BlackBerry, PageWriter, and Communicator are representative of small devices that have stayed with the Qwerty paradigm, and they are by no means alone. [CLS] [SEP] There are many similar devices on the market. [CLS] [SEP] There is another way to reduce the size of a Qwerty-like keyboard. [CLS] [SEP] Matias and colleagues proposed a clever way to half the size of the keyboard and still leverage touch typing skills (Matias, MacKenzie, & Buxton, 1993, 1994, 1996a, 1996b. [CLS] [SEP] The Half-Qwerty keyboard, commercialized by Matias Corporation (Rexdale, Ontario, Canada; http://www.halfqwerty.com), is a regular Qwerty keyboard that is split in half. [CLS] [SEP] There are two possible Half-Qwerty keyboards-one corresponds to the left half of the Qwerty keyboard and the other to the right. [CLS] [SEP] To enter characters the user simply types the appropriate key in the regular fashion, but if the Space bar is held while a key is typed, the corresponding character from the other half of the keyboard is entered. [CLS] [SEP] Either hand can be used. [CLS] [SEP] Hitting the Space bar alone types a space. [CLS] [SEP] Note that the relative finger movements used for one-handed typing are the same as those used for two-handed typing. [CLS] [SEP] The two Half-Qwerty keyboards are depicted in Figure 10. [CLS] [SEP] Matias and colleagues report the results of a rigorous user evaluation of the Half-Qwerty (Matias et al., 1993(Matias et al., , 1996a. [CLS] [SEP] Right-handed participants using their left hands reached 50% of their two-handed typing speed after approximately 8 hr of practice, and after 10 hr all participants typed between 41% and 73% of their two-handed speed, ranging from 24 to 43 wpm. [CLS] [SEP] The Half-Qwerty keyboard is unique among the other solutions to the mobile and handheld text entry problem because the keyboard is small, familiar to users, supports fairly rapid text entry, and has some significant applications. [CLS] [SEP] There are many industrial jobs that require a worker to enter text with one hand while doing another task with the other. [CLS] [SEP] The Half-Qwerty keyboard is also useful in situations where a user has lost the use of one hand. [CLS] [SEP] In both cases, software can be installed on a regular desktop computer that enables Half-Qwerty functionality. [CLS] [SEP] A small stand-alone version is now available as an add-on for handheld devices. [CLS] [SEP] Although lugging around a full-sized Qwerty keyboard to use with the PDA in one's shirt pocket seems odd, collapsible Qwerty keyboards allow users to do just that. [CLS] [SEP] In 1999 Think Outside Inc. [CLS] [SEP] (Carlsbad, CA; http://www.thinkoutside.com) released the Stowaway ™ , a full-size Qwerty keyboard that collapses to a 91 × 130 × 20 mm volume. [CLS] [SEP] Originally released for the Palm, the Stowaway was later adopted by Palm Computing, becoming the Palm ™ portable keyboard. [CLS] [SEP] Think Outside also produce collapsible keyboards for other families of PDA.
By way of introduction to five-key text input, we mention the date stamp method (also known as the three-key method). [CLS] [SEP] This method can be implemented using very limited hardware: technology to display at least one character, two buttons (or a wheel) to scroll through the alphabet, and an Enter key. [CLS] [SEP] It is called the date stamp method because, similar to a date stamp, the desired character is selected by rotating through the character set. [CLS] [SEP] Video arcade games often use this technique for players to enter their name when they achieve a high score. [CLS] [SEP] The technique is also commonly used for entering text into some electronic musical instruments. [CLS] [SEP] Although the three-key method is reasonable for entering small amounts of text into devices with a simple interface, the method is frustratingly slow and not suitable for even modest amounts of text entry (see Bellman & MacKenzie, 1998, for further discussion). [CLS] [SEP] Five-key text entry uses an interface with four cursor keys (up, down, left, and right) and an Enter key (see Figure 11). [CLS] [SEP] The alphabet, number, and symbol characters are presented on a LCD display with typically three to five rows and 10 to 20 columns, and the five keys are used to move a cursor and select one letter at a time. [CLS] [SEP] The characters are presented in alphabetic order or in the familiar Qwerty arrangement. [CLS] [SEP] The five-key input method is typically used on very small devices like the recent generation of pagers, which only have enough space for a small LCD screen and five keys. [CLS] [SEP] An example is the AccessLink ® II pager from Glenayre Electronics Inc. [CLS] [SEP] (Charlotte, NC; http://www.glenayre.net). [CLS] [SEP] The main problem with the five-key method is that many key presses are required to move between characters, and this significantly slows input. [CLS] [SEP] In view of this, Bellman and MacKenzie (1998) devised a technique known as fluctuating optimal character layout (FOCL). [CLS] [SEP] The idea is that because the input device knows the last character the user has entered, it can subsequently present the characters in an arrangement that places the most likely characters closer to the cursor's home position; the display is rearranged after each character entered so as to minimize the number of cursor movements to select the most likely next character. [CLS] [SEP] They show that the average number of KSPC can be reduced by over 50%, from just over 4 KSPC for the alpha layout to less than 2 KSPC using FOCL. [CLS] [SEP] Bellman and MacKenzie (1998) reported the results of an exploratory study comparing FOCL to the five-key input method using the Qwerty arrangement of letters. [CLS] [SEP] Their study, with 10 participants, found that after 10 sessions of 15 min each there was no statistically significant difference in entry speed or accuracy. [CLS] [SEP] The average speed they reported for both Qwerty and FOCL is 10 wpm. [CLS] [SEP] Although the study was longitudinal in nature, evidently participants did not have enough exposure to FOCL to approach their maximum text entry speeds. [CLS] [SEP] Although fewer keystrokes were required to enter each character, more visual scan time was required to find the next character. [CLS] [SEP] In short, as with many other optimized text entry methods, the advantage of the input technique is apparently not realized until users invest considerable time to become familiar with the new technology. [CLS] [SEP] The three-key, five-key, and FOCL text input techniques all require the user's attention on the screen to scroll around and select characters. [CLS] [SEP] Therefore, text creation is a two-FOA task with these techniques. [CLS] [SEP] Single-handed input is possible with all of these input techniques.
Some researchers have proposed alternatives to the telephone or Qwerty key arrangements. [CLS] [SEP] The single-hand key card (SHK) is a small card with a keyboard and joystick proposed by Sugimoto and Takahashi (1996). [CLS] [SEP] The SHK is held in one hand, pinned between the palm and the thumb in such a way that the four fingers manipulate the keyboard and joystick on the top face of the device. [CLS] [SEP] SHK is a small keyboard with multiple characters on each key. [CLS] [SEP] It employs disambiguation technology. [CLS] [SEP] The keyboard arrangement of SHK appears in Figure 12. [CLS] [SEP] The joystick and three function keys appear in a row above the keyboard on the device (not shown). [CLS] [SEP] The AR key in Figure 12 toggles through the word possibilities generated by the ambiguity resolution feature. [CLS] [SEP] Sugimoto and Takahashi (1996) reported that the keys were arranged so as to reduce the average motion of the fingers, although they have not explained in detail how they came to their key arrangement or published an evaluation of their device. [CLS] [SEP] Once the arrangement is learned by the user, the device could support single FOA text creation and single-handed text input. [CLS] [SEP] Another important class of keyboard is chording keyboards, where text is entered by pressing multiple keys simultaneously. [CLS] [SEP] Because multiple keys are pressed, fewer keys are needed on a chord keyboard (resulting in smaller devices) and chords not being used for entering single letters can be used to enter words. [CLS] [SEP] The Twiddler by Handykey Corporation (Denver, CO; http://www.handykey.com) is a chord keyboard popular with researchers in the wearable and ubiquitous computing fields. [CLS] [SEP] The Twiddler is operated with one hand and has 4 mode keys depressed by the thumb (Number, Alt, Ctrl, and Shift) and 12 keys for the fingers. [CLS] [SEP] The Twiddler keyboard appears in Figure 13; notice that the layout of the characters is somewhat alphabetical. [CLS] [SEP] However, the Twiddler is user configurable; the user may change the characters (or words) entered by each chord (the keyboard appearing in Figure 13 is the default layout), and other character mappings for the chords have been proposed for the Twiddler, which are claimed to map common characters to easier chords. [CLS] [SEP] The Twiddler also has chords defined for common small English words and parts of words (e.g., the, and, -ion, and -ing, etc.). [CLS] [SEP] The Twiddler is by no means the only chord keyboard. [CLS] [SEP] Other examples include the BAT ™ by Infogrip, Inc. [CLS] [SEP] (Ventura, CA; http://www.infogrip.com) and MonoManus ® by ElmEntry Enterprises (Minneapolis, MN; http://www.hankes.com/eee/index.htm). [CLS] [SEP] However, most of these keyboards interface to desktop computers and are not expressly for mobile computing platforms. [CLS] [SEP] The Twiddler interfaces to the Palm only if the Happy Hacking ™ Cradle (by PFU America, Inc; San Jose, CA; http://www.pfuca.com) is used (available separately). [CLS] [SEP] The Twiddler can be used with one hand (zero FOA, once the chords are learned), and anecdotal reports of typing speed as fast as 50 wpm have been reported (Hjelm, Tan, Fabry, Fanchon, & Reichert, 1996).
Stylus-based text entry uses a pointing device, typically a pen (a.k.a. [CLS] [SEP] stylus), to select characters through tapping or gesture. [CLS] [SEP] Although our discussions here are limited to stylus input, there are several related examples of research in mobile text entry using finger or touch input, wherein the user's finger is used instead of a stylus (e.g., Enns & MacKenzie, 1998;Fukumoto & Suenaga, 1994;Goldstein, Book, Alsio, & Tessa, 1999). [CLS] [SEP] All of the stylus-based text entry techniques require two hands, unless the user can support the device on a table while using it.
Handwriting recognition was once touted as the solution for mobile text entry, but early systems received considerable bad press, as noted earlier. [CLS] [SEP] To be fair, handwriting recognition is a difficult problem, and the technology has improved since the early days. [CLS] [SEP] There are two problems that handwriting recognizers must solve: segmentation and recognition. [CLS] [SEP] The input to a recognizer is a series of ink trails, with each stored as a set of digitized points representing the stylus travel between pen-down and pen-up actions. [CLS] [SEP] Segmentation is the process of determining which segments are in which characters. [CLS] [SEP] With the goal of supporting "natural handwriting," input is often a mixture of block printing and cursive handwriting. [CLS] [SEP] As one might imagine, segmenting the strokes in the sloppy scrawl of a user is very difficult indeed. [CLS] [SEP] One way to reduce the complexity is to constrain input (e.g., to support block printed characters only). [CLS] [SEP] However, entry like this is by no means "natural." [CLS] [SEP] Generally, the more relaxed the constraints, the more difficult the segmentation and recognition process; recognition accuracy usually suffers. [CLS] [SEP] To compensate, recognizers are made more complex and, unfortunately, require more memory (see Tappert, Suen, & Wakahara, 1990, for a detailed survey of recognition techniques and technologies). [CLS] [SEP] One obstacle for recognition-based technologies is high user expectations. [CLS] [SEP] LaLomia (1994) reported that users are willing to accept a recognition error rate of only 3% (a 97% recognition rate), although Frankish and colleagues (1995) concluded that users will accept higher error rates depending on the text-editing task. [CLS] [SEP] Several researchers have published studies evaluating or comparing the recognition rate of various recognition systems. [CLS] [SEP] Chang and MacKenzie reported a recognition rate of 87% to 93% for two recognizers (Chang & MacKenzie, 1994;MacKenzie & Chang, 1999). [CLS] [SEP] Wolf, Glasser, and Fujisaki (1991) reported a recognition rate of 88% to 93%. [CLS] [SEP] Santos, Baltzer, Badre, Henneman, and Miller (1992) reported a novice recognition rate of 57%, although this improved to 97% after 3 hr of practice. [CLS] [SEP] These studies suggest that recognition technology is close to matching user expectations for expert users but that novices may be discouraged by their initial experiences. [CLS] [SEP] Perhaps the acid test, an observation suggesting that handwriting recognition does not yet perform adequately, is that there are no mobile consumer products in the market today where natural handwriting recognition is the sole text input method. [CLS] [SEP] The products that do support stylus-based text input work with constraints or stylized alphabets (see later). [CLS] [SEP] Gibbs (1993) made an important observation on text entry speed and handwriting recognition. [CLS] [SEP] In his summary of 13 recognizers, the recognition speed of the systems was at least 4 cps, which translates into 48 wpm. [CLS] [SEP] However, human hand-printing speed is typically on the order of 15 wpm (Card et al., 1983;Devoe, 1967;Van Cott & Kinkade, 1972). [CLS] [SEP] In other words, speed is a function of human limitations, not machine limitations. [CLS] [SEP] Even with perfect recognition, therefore, entry rates can never reach those of, for example, touch typing.
Unistrokes is a stylized single-stroke alphabet developed by Goldberg and Richardson at the Xerox Palo Alto Research Center (Goldberg & Richardson, 1993). [CLS] [SEP] At the time of the invention, handwriting recognition technology was not in good stead with users, as the problems noted earlier were rampant in existing products. [CLS] [SEP] To address these Goldberg and Richardson developed a simplified set of strokes that is both easier for software to recognize and quicker for users to write. [CLS] [SEP] The Unistrokes alphabet appears in Figure 14. [CLS] [SEP] The name Unistrokes describes the most significant simplification that Goldberg and Richardson (1993) made: Each letter is written with a single stroke. [CLS] [SEP] This greatly simplifies recognition, as the segmentation problem is essentially eliminated. [CLS] [SEP] The strokes are so simple that users can write Unistrokes without watching the stylus. [CLS] [SEP] Goldberg and Richardson observed that Unistrokes afford what they termed heads-up text entry (i.e., reduced FOA). [CLS] [SEP] The Unistrokes alphabet does not contain numbers, punctuation, or symbolic characters, although the original publication (Goldberg & Richardson, 1993) suggests ways of supporting these (e.g., using a dedicated stroke as a mode shift). [CLS] [SEP] Although a comparative study of Unistrokes has never been undertaken, some experimental results are given (Goldberg & Richardson, 1993). [CLS] [SEP] Ignoring errors, a text-entry rate of 2.8 cps (i.e., 34 wpm) was reported. [CLS] [SEP] Although an interesting and promising idea, Unistrokes did not catch on, and the most likely reason is that the strokes are not similar enough to regular handwritten or printed letters; the strokes must be learned. [CLS] [SEP] Palm designed a single-stroke system called Graffiti that is used in their Palm product. [CLS] [SEP] Graffiti has been credited as a significant reason for the commercial success of the Palm (Blickenstorfer, 1995). [CLS] [SEP] The Graffiti alphabet appears in Figure 15. [CLS] [SEP] Graffiti has strokes for punctuation, numbers, symbolic characters, and mode switches (capital vs. [CLS] [SEP] lowercase). [CLS] [SEP] These are omitted in Figure 15 for brevity. [CLS] [SEP] Capital and lowercase characters are supported with mode switching, which is accomplished with a dedicated stroke. [CLS] [SEP] Basic editing (Backspace) is also supported with a special stroke. [CLS] [SEP] The great advantage that Graffiti has over Unistrokes is its similarity to normal hand-printed characters. [CLS] [SEP] MacKenzie and Zhang (1997) performed a study of the immediate usability of Graffiti. [CLS] [SEP] They observed that 79% of the Graffiti strokes match letters of the Roman alphabet. [CLS] [SEP] Under experimental conditions they measured the accuracy with which participants could enter the alphabet following 1 min of studying the Graffiti reference chart, following 5 min of practicing with Graffiti and following a 1-week lapse with no intervening practice. [CLS] [SEP] The accuracies they reported were very high-86%, 97%, and 97%, respectively. [CLS] [SEP] Isokoski (1999) presented a single-stroke alphabet that can be entered using a wide range of pointing devices. [CLS] [SEP] He observed that the easiest motions to make with pointing devices are the four primary compass directions: up, down, left, and right. [CLS] [SEP] Another design objective was finding the optimal mapping between the four directional strokes and the characters of the alphabet (more frequent characters should have shorter strokes). [CLS] [SEP] He called the result minimal device-independent text-input method (MDTIM). [CLS] [SEP] The MDTIM alphabet appears in Figure 16. [CLS] [SEP] Isokoski (1999) evaluated his single-stroke alphabet with a variety of pointing devices. [CLS] [SEP] The measured average text entry speed using a touch pad was 7.5 wpm. [CLS] [SEP] The study was not longitudinal, and the participants were still showing improvement at the end of the trials. [CLS] [SEP] The MDTIM alphabet suffers from the same affliction as Unistrokes and many other text input methods: The alphabet is not familiar to the average user, and practice is required to learn the alphabet and attain fast entry speeds. [CLS] [SEP] However, Isokoski's results do indicate that the MDTIM alphabet is indeed device-independent. [CLS] [SEP] Until recently Windows CE devices were without a similar easy-to-learn handwriting recognition technology. [CLS] [SEP] This changed in 1998 when Microsoft licensed Jot from Communication Intelligence Corporation. [CLS] [SEP] Jot recognizes many of the Graffiti strokes and a number of alternative strokes similar to normal handwriting and printing as well. [CLS] [SEP] The Jot alphabet appears in Figure 17. [CLS] [SEP] Jot also includes strokes for numbers, symbolic characters, and common editing functions. [CLS] [SEP] The different cases (capital vs. [CLS] [SEP] lowercase) are selected by where the user writes the stroke on the touch screen of the device. [CLS] [SEP] Jot also allows some customization: Users can indicate writing preferences for some characters. [CLS] [SEP] All the alphabets just described have the potential to support single-FOA text entry once the user is familiar with the stylized alphabet.
Gestures are informal motions for communication. [CLS] [SEP] We classify the text entry methods in this section as gestural because of their informality and fluidity. [CLS] [SEP] Character-recognition-based and soft-keyboard-based input techniques have fixed characters that are entered in a certain way, or the stylus must be tapped in a certain location to select characters for input. [CLS] [SEP] Gesture-based text input technologies do not have a fixed set of strokes that a recognizer turns into characters; gestural text input methods have a framework in which informal stylus motions are interpreted as characters. [CLS] [SEP] An example of this is Cirrin, a technology presented by Mankoff and Abowd (1998). [CLS] [SEP] The letters of the alphabet are arranged inside the perimeter of an annulus. [CLS] [SEP] Figure 18 shows the word cirrin written on the Cirrin interface. [CLS] [SEP] TEXT ENTRY FOR MOBILE COMPUTING 181 Characters are selected by moving into and out of the appropriate sector of the annulus. [CLS] [SEP] Mankoff and Abowd chose the circular arrangement and the order of the letters to minimize the distance between likely consecutive characters. [CLS] [SEP] In Figure 18, notice how the final two letters, in, are selected; the stylus can be moved directly from one letter into the neighboring letter. [CLS] [SEP] Cirrin is not a "heads-up" text input method; users must attend to the interface when entering text. [CLS] [SEP] As presented, only alphabetic characters are supported. [CLS] [SEP] A space is entered by lifting the stylus and punctuation and mode shifts are accomplished by using an auxiliary technique, such as keys operated by the nondominant hand. [CLS] [SEP] Mankoff and Abowd (1998) did not report a user evaluation in their publication; however, they stated that Cirrin "is about as fast as existing pen entry systems" (p. [CLS] [SEP] 214), but no indication is given of specifically what pen entry systems they compared Cirrin to. [CLS] [SEP] Quikwriting is an input technology described by Perlin (1998). [CLS] [SEP] The idea is to have a 3 × 3 grid where characters are entered with strokes that begin in the center "home" position and move through one to three adjoining positions, returning back to the home position. [CLS] [SEP] Figure 19 illustrates the Quikwriting lowercase menu. [CLS] [SEP] Quikwriting has similar displays and modes for numbers, capitals, and symbols. [CLS] [SEP] The symbols in the top center and bottom center positions represent the different modes. [CLS] [SEP] Letters that occur more frequently in English are given the shortest strokes. [CLS] [SEP] For example, i in Figure 19 is selected by moving into the bottom right position and then returning back to the home position. [CLS] [SEP] Infrequent letters have longer strokes (k requires a move into the upper left position, then to the upper right position, and finally back to home). [CLS] [SEP] There is an online demonstration available at http://www.mrl.nyu.edu/projects/ quikwriting/. [CLS] [SEP] Quikwriting, like Cirrin, requires the user to look at the interface and so is a two-FOA interface, if users correct errors as they go. [CLS] [SEP] At the time of Perlin's (1998) publication, a user evaluation had not been performed, although he wrote that users familiar with Graffiti found Quikwriting about three times faster. [CLS] [SEP] Another gestural text input technology is T-Cube, described by Venolia and Neiberg (1994). [CLS] [SEP] T-Cube is similar to a two-tier pie menu system. [CLS] [SEP] Figure 20 shows the pie menu structure of T-Cube. [CLS] [SEP] The user places the stylus within one of nine starting positions (arranged in a 3 × 3 grid; see Figure 20a). [CLS] [SEP] The location where the stylus is first placed indicates which of the pie menus (see Figure 20b) the user will select a character from. [CLS] [SEP] One of the eight characters in the submenu is chosen by flicking the stylus in the appropriate direction. [CLS] [SEP] The interface does not display the pie menus (Figure 20b) unless the user hesitates. [CLS] [SEP] T-Cube includes numbers, many symbol characters, and basic backspace editing. [CLS] [SEP] Like the other gestural input techniques, T-Cube requires the attention of the user, making standard text entry a two-FOA task. [CLS] [SEP] Venolia (1994) presented the results of a user study of T-Cube indicating that reasonably fast text entry can be achieved; one of his participants achieved a rate of 106 characters per minute (21 wpm). [CLS] [SEP] However, he also acknowledged that the interface is difficult to learn.
A soft keyboard is a keyboard implemented on a display with built-in digitizing technology. [CLS] [SEP] Text entry is performed by tapping on keys with a stylus or finger. [CLS] [SEP] However, eyes-free entry is not possible. [CLS] [SEP] The advantages of soft keyboards include simplicity and efficient use of space. [CLS] [SEP] When no text entry is occurring, the soft keyboard disappears, thus freeing screen space for other purposes. [CLS] [SEP] Soft keyboards have performance advantages too. [CLS] [SEP] MacKenzie, reported a text entry task comparing a Qwerty soft keyboard, an ABC soft keyboard, and hand printing. [CLS] [SEP] The Qwerty soft keyboard was both faster and more accurate than hand printing (see Figure 3). [CLS] [SEP] This section presents some variations of soft keyboards developed in industry and research labs. [CLS] [SEP] We begin by giving the predicted expert entry rates according to the model of Soukoreff and MacKenzie (1995) presented earlier. [CLS] [SEP] These are given in Figure 21 sorted by predicted entry rate, highest to lowest. [CLS] [SEP] Several changes and one correction 7 have been introduced to the model since 7. [CLS] [SEP] The model works by using digrams to model the users' transitions from key to key as they enter text. [CLS] [SEP] However, a long Space key (such as in the Qwerty keyboard) or multiple Space keys are best modeled with trigrams. [CLS] [SEP] The error made by MacKenzie and Zhang, 1998) was a miscalculation involving the relative probabilities of trigrams containing a Space character. [CLS] [SEP] Typically, trigram frequencies are not explicitly represented but, rather, are derived from digram frequencies. [CLS] [SEP] The probability of a trigram (i.e., the probability of the character sequence i-j-k) is found with the expression: where P(i,j) is the probability of digram i-j. [CLS] [SEP] MacKenzie and Zhang omitted the denominator from their calculations. [CLS] [SEP] This error was first reported by Hunter, Zhai, and Smith (2000) and Zhai, Hunter, and Smith (2000).
One early predictive input technology is the Reactive Keyboard (Darragh, 1988;Darragh & Witten, 1991;Darragh, Witten, & James, 1990). [CLS] [SEP] The Reactive Keyboard monitors what a user enters and presents text predictions that the user can choose from using the mouse. [CLS] [SEP] The predictions are generated by finding the longest matching substrings in the previously entered text. [CLS] [SEP] The Reactive Keyboard adapts to users' input and hence is not limited to a static set of words or phrases. [CLS] [SEP] No experimental results of text entry speed or accuracy are reported for the Reactive Keyboard. [CLS] [SEP] Other related work is hereby cited (Jakobsson, 1986;Masui & Nakayama, 1994;Raita & Teuhola, 1987). [CLS] [SEP] POBox (Masui, 1998(Masui, , 1999 is predictive input technology that allows users to enter part of a word and then search for similar words by spelling, pronunciation, or shape (for pictograph-based languages). [CLS] [SEP] It is not limited to alphabetic languages. [CLS] [SEP] POBox uses a static database coupled with another primary input technique, such as a soft keyboard or telephone keypad. [CLS] [SEP] Search results appear on the screen as the user types. [CLS] [SEP] A tap or key press selects the desired word. [CLS] [SEP] When embedded in a mobile phone, text entry via the multikey method yields a list of search results that the user scrolls through using a wheel on the side of the device. [CLS] [SEP] Lewis (1999) and Lewis et al. [CLS] [SEP] (1999) experimented with a predictive soft keyboard technology for extremely limited screen sizes. [CLS] [SEP] Their system presents the user with keys for the six to eight most likely characters, and an "other" key revealing the rest of the alphabet. [CLS] [SEP] Lewis (1999) reported text-entry speeds for a Qwerty soft keyboard, his predictive keyboard, and handwriting (as a control condition) at 14 wpm, 6 wpm, and 22 wpm, respectively. [CLS] [SEP] The speed Lewis reported for soft keyboard entry is approximately half that reported by others (e.g., . [CLS] [SEP] Lewis observed that the uncertain arrangement of keys on the predictive keyboard significantly hindered performance.
There are many text entry methods available to designers of mobile systems, and without a doubt more are forthcoming. [CLS] [SEP] However, deciding which is best for an application is difficult, in part, because of the lack of publications giving empirically measured text entry speeds and accuracies. [CLS] [SEP] This article has brought together many of the techniques in use or under investigation in this exciting area in mobile computing. [CLS] [SEP] The result is a snapshot of the current state of the art in mobile text entry. [CLS] [SEP] Some important modeling techniques have been presented and elaborated. [CLS] [SEP] Movement and language are omnipresent in human-computer interaction. [CLS] [SEP] The Fitts' Digram Model shows how Fitts' law and a language corpus can work together in a priori analyses of design alternatives for stylus input on soft keyboards or single-finger input on small physical keyboards. [CLS] [SEP] However, further work is needed to refine this modeling technique-for example, in determining the correct coefficients for the Fitts' law model and in exploring and refining other aspects of the model, such as treatment of the space and punctuation characters or its sensitivity to changes in the language model. [CLS] [SEP] In addition, we have examined many issues in methodology and evaluation and have identified factors, such as focus of attention, and whether one or two hands are used to manipulate the text entry device that impact user performance. [CLS] [SEP] Clearly, evaluation is critical, and it is by no means simple. [CLS] [SEP] A number of issues are particularly tricky, such as the measurement and treatment of errors and the types of tasks used in text entry studies. [CLS] [SEP] These and other topics are the subject of ongoing and future work.
